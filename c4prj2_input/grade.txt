Grading at Sun Dec  6 06:03:53 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==173== Memcheck, a memory error detector
==173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==173== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==173== Command: ./tester h.txt d.txt
==173== Parent PID: 172
==173== 
==173== Invalid read of size 8
==173==    at 0x400ED8: add_future_card (in /graderhome/work/c4prj2_input/tester)
==173==    by 0x400CA9: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==173==    by 0x400DFD: read_input (in /graderhome/work/c4prj2_input/tester)
==173==    by 0x401B73: main (test-input.c:69)
==173==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==173== 
==173== 
==173== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==173==  Access not within mapped region at address 0x8
==173==    at 0x400ED8: add_future_card (in /graderhome/work/c4prj2_input/tester)
==173==    by 0x400CA9: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==173==    by 0x400DFD: read_input (in /graderhome/work/c4prj2_input/tester)
==173==    by 0x401B73: main (test-input.c:69)
==173==  If you believe this happened as a result of a stack
==173==  overflow in your program's main thread (unlikely but
==173==  possible), you can try to increase the size of the
==173==  main thread stack using the --main-stacksize= flag.
==173==  The main thread stack size used in this run was 8388608.
==173== 
==173== HEAP SUMMARY:
==173==     in use at exit: 808 bytes in 12 blocks
==173==   total heap usage: 19 allocs, 7 frees, 5,072 bytes allocated
==173== 
==173== LEAK SUMMARY:
==173==    definitely lost: 0 bytes in 0 blocks
==173==    indirectly lost: 0 bytes in 0 blocks
==173==      possibly lost: 0 bytes in 0 blocks
==173==    still reachable: 808 bytes in 12 blocks
==173==         suppressed: 0 bytes in 0 blocks
==173== Rerun with --leak-check=full to see details of leaked memory
==173== 
==173== For counts of detected and suppressed errors, rerun with: -v
==173== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==179== Memcheck, a memory error detector
==179== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==179== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==179== Command: ./tester i1 i2
==179== Parent PID: 178
==179== 
==179== Invalid read of size 8
==179==    at 0x400ED8: add_future_card (in /graderhome/work/c4prj2_input/tester)
==179==    by 0x400CA9: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==179==    by 0x400DFD: read_input (in /graderhome/work/c4prj2_input/tester)
==179==    by 0x401B73: main (test-input.c:69)
==179==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==179== 
==179== 
==179== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==179==  Access not within mapped region at address 0x8
==179==    at 0x400ED8: add_future_card (in /graderhome/work/c4prj2_input/tester)
==179==    by 0x400CA9: hand_from_string (in /graderhome/work/c4prj2_input/tester)
==179==    by 0x400DFD: read_input (in /graderhome/work/c4prj2_input/tester)
==179==    by 0x401B73: main (test-input.c:69)
==179==  If you believe this happened as a result of a stack
==179==  overflow in your program's main thread (unlikely but
==179==  possible), you can try to increase the size of the
==179==  main thread stack using the --main-stacksize= flag.
==179==  The main thread stack size used in this run was 8388608.
==179== 
==179== HEAP SUMMARY:
==179==     in use at exit: 760 bytes in 9 blocks
==179==   total heap usage: 13 allocs, 4 frees, 4,904 bytes allocated
==179== 
==179== LEAK SUMMARY:
==179==    definitely lost: 0 bytes in 0 blocks
==179==    indirectly lost: 0 bytes in 0 blocks
==179==      possibly lost: 0 bytes in 0 blocks
==179==    still reachable: 760 bytes in 9 blocks
==179==         suppressed: 0 bytes in 0 blocks
==179== Rerun with --leak-check=full to see details of leaked memory
==179== 
==179== For counts of detected and suppressed errors, rerun with: -v
==179== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: C
